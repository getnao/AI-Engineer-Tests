version: 2

models:
    - name: dbt_source_freshness
      description: 'The current status of all DBT sources along with when the sources were last loaded.'
      columns:
        - name: freshness_observed_at
          data_tests:
            - not_null
        - name: source_freshness_state
          data_tests:
            - not_null
        - name: table_name
          data_tests:
            - not_null
    - name: dbt_compilation_runtime
      description: 'The most recent not null compilation time elapsed for each DBT model.'
      columns:
        - name: model_unique_id
          data_tests:
            - not_null
            - unique
        - name: compilation_time_seconds_elapsed
          data_tests:
            - not_null
    - name: dbt_failing_tests
      description: The DBT tests that are failing as of the last recorded test runs.
      columns:
        - name: test_unique_id
          data_tests:
            - not_null
            - unique
        - name: generated_at
          data_tests:
            - not_null
    - name: dbt_last_successful_test_runs
      description: The timestamp of the last successful test run for tests that are currently failing.
      columns:
        - name: test_unique_id
          data_tests:
            - not_null
            - unique
            - relationships:
                to: ref('dbt_failing_tests')
                field: test_unique_id
        - name: last_successful_run_at
    - name: dbt_run_results
      description: "Information about compilation/execution time for DBT models."
    - name: dbt_snapshots_results
      description: Model for dbt snapshot results
    - name: dbt_source_tests
      description: Model for source testing
    - name: dbt_test_results
      description: "DBT test results by name and time"
    - name: dbt_gdpr_logs
      description: "DBT test results by name and time"
    - name: wk_rpt_dbt_model_efficiency
      description: A report for calculating the efficiency of dbt models.  It aggregates query data up to the dbt resource level and applies report level filtering.
      columns:
        - name: report_key
          data_tests:
            - unique
        - name: dbt_invocation_id
        - name: dbt_version
        - name: dbt_run_started_at
        - name: is_invocation_full_refresh
        - name: airflow_dag_id
        - name: airflow_task_id
        - name: airflow_dag_run_date_id
        - name: airflow_run_id
        - name: airflow_try_number
        - name: airflow_orchestration
        - name: is_model_full_refresh
        - name: model_materialization
        - name: resource_id
        - name: resource_name
        - name: resource_type
        - name: resource_bytes_scanned
        - name: resource_bytes_written
        - name: resource_bytes_spilled_to_remote_storage
        - name: resource_bytes_spilled_to_local_storage
        - name: resource_partitions_total
        - name: resource_partitions_scanned
        - name: resource_query_count
        - name: resource_remote_storage_efficiency
        - name: resource_local_storage_efficiency
        - name: resource_partition_efficiency
        - name: resource_efficiency_score

    - name: dbt_invocation_summary
      description: >
        This model calculates the critical path for each dbt invocation. 
        It processes node execution data to create a directed acyclic graph (DAG) 
        and determines the critical path of the dbt run.
        The model also generates a Mermaid gantt chart representation of the critical path.
        
      columns:
        - name: invocation_id
          description: Unique identifier for each dbt command invocation
          tests:
            - unique
            - not_null
        - name: run_started_at
          description: Timestamp indicating when the dbt run started
          tests:
            - not_null
        - name: critical_path_node_ids
          description: >
            An array of node IDs representing the critical path of the dbt run. 
            These nodes form the longest path in the execution DAG and determine 
            the overall runtime of the invocation.
        - name: critical_path_mermaid
          description: >
            A string representation of the critical path in Mermaid gantt chart format,
            visualizing the execution timeline of the critical path nodes.


    - name: dbt_node_summary
      description: "This model summarizes runtime statistics for dbt node executions, grouped by node_id, materialization, and whether it was a full refresh."
      tests:
        - dbt_utils.unique_combination_of_columns:
            combination_of_columns:
              - node_id
              - materialization
              - was_full_refresh
      config:
        occurrence_limit: 50
      
      columns:
        - name: node_id
          description: "Unique identifier for the dbt node"
          tests:
            - not_null

        - name: materialization
          description: "The materialization strategy used for the node (e.g., table, view, incremental)"
          tests:
            - not_null

        - name: was_full_refresh
          description: "Boolean indicating whether the node execution was a full refresh"
          tests:
            - not_null

        - name: node_occurrence
          description: "Count of node executions within the analyzed time frame (up to 50 most recent executions)"
          tests:
            - not_null

        - name: min_runtime
          description: "Minimum total runtime for the node across analyzed executions"
          tests:
            - not_null

        - name: max_runtime
          description: "Maximum total runtime for the node across analyzed executions"
          tests:
            - not_null

        - name: mode_runtime
          description: "Mode (most frequent) runtime for the node, calculated using a histogram method"
          tests:
            - not_null

    - name: dbt_node_executions
      description: This model combines execution data for different types of dbt nodes (models, snapshots, seeds, and tests) into a single view, providing a comprehensive overview of all node executions.
      columns:
        - name: command_invocation_id
          description: Unique identifier for the dbt command invocation
          tests:
            - not_null
        - name: node_type
          description: Type of the dbt node (model, snapshot, seed, or test)
          tests:
            - not_null
            - accepted_values:
                values: ['model', 'snapshot', 'seed', 'test']
        - name: node_id
          description: Unique identifier for the node
          tests:
            - not_null
        - name: node_name
          description: Name of the node
          tests:
            - not_null
        - name: thread_id
          description: ID of the thread that executed the node
        - name: materialization
          description: Materialization strategy used for the node
        - name: was_full_refresh
          description: Boolean indicating whether the node execution was a full refresh
        - name: node_status
          description: Status of the node execution
        - name: package_name
          description: Name of the package containing the node
        - name: node_path
          description: File path of the node
        - name: node_meta
          description: Metadata associated with the node
        - name: node_tags
          description: Tags associated with the node
        - name: depends_on_nodes
          description: Array of node IDs that this node depends on
        - name: run_started_at
          description: Timestamp when the node execution started
          tests:
            - not_null
        - name: compile_started_at
          description: Timestamp when the node compilation started
        - name: query_completed_at
          description: Timestamp when the node query completed
        - name: total_node_runtime
          description: Total runtime of the node execution in seconds
          tests:
            - not_null
    
      tests:
        - dbt_utils.unique_combination_of_columns:
            combination_of_columns:
              - command_invocation_id
              - node_id
